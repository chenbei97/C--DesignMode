享元模式的设计思想是尽可能共用已经创建出来的同类对象，避免频繁使用new创建，可以节省内存

V1版本的设计: 非享元模式,棋子需要反复被创建,实际上除了位置不同其它都是相似的,内存占用太多

V2版本：享元子类黑白棋是内部状态，不会改变的状态，作为类整体体现了；位置是外部状态，需要传递给享元抽象类的方法来改变
       最后还需要1个工厂类，作为享元池，将几种状态保存在map中，随时拿出使用

--- 快速理解 ---
棋子的位置和颜色，位置易变使用公共函数设置，颜色只有黑白，可以存储在棋子工厂的map<int,piece*>中
黑棋和白棋共同继承棋子基类，棋子工厂只会保存2个对象，避免了大量复制