UI的控件交互就是复杂的网状关系，某个控件的状态改变可能会影响其他组件，例如禁用启用等
如果不使用中介者模式，大体上写法如下：
1. 定义一个控件基类Widget，类似于QWidget，其定义了一个change(map<string,ctrl*> ctrls)纯虚函数
内部还顶一个字符串来表示控件的文本text
2. 定义子类Button,RadioBtn,LineEdit等，每个子类都重写虚函数，根据text做对应的事
    内部是借助ctrls[text]来实现当前控件对其他控件的控制

--- 快速理解 ---
1. 中介者类作为控件类的构造参数,控件类的change函数通过中介者的widgetChanged来实现
这样可以有很多个不同的具体子类中介者，从而实现不同的控制策略，类似于策略模式
2. 控件类提供禁用和启用的虚函数，子类重新实现
3. 中介者类还提供createWidgets方法,不同的中介策略需要的控件是不同的,例如登陆类只需要2个编辑框几个按钮等
