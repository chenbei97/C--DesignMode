单一职责原则：一个类应该只有一个引起变化的原因，即尽量少的指定类中的方法，让类的职责尽量单一
 
如果把容器和迭代器的实现放在一个类中，可能以后希望增加倒序遍历或者跳过某些元素遍历就会不方便

容器类要提供 T& value(int)方法 和 int size()方法，可以提供创建和自身容器类匹配的迭代器，作为工厂方法
这样每个容器类可以有不同的迭代器类型，例如正向反向或者跳跃迭代器

迭代器类需要对容器类进行遍历，所以内部有个聚合关系，所以可以通过构造函数来传递容器类
迭代器类内部要定义的核心方法是next,isDone,结合mCurrentIndex来提供当前值的返回，实际上是借助容器类的value方法来返回的
